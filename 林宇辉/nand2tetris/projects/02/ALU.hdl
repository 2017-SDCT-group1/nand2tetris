// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 * if the ALU output == 0, zr is set to 1; otherwise zr is set to 0;
 * if the ALU output < 0, ng is set to 1; otherwise ng is set to 0.
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not
// if (f == 1)  set out = x + y  // integer 2's complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not
// if (out == 0) set zr = 1
// if (out < 0) set ng = 1

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

    PARTS:
        Mux ( a = x[0] , b = false , sel = zx , out = zx0 );
        Mux ( a = x[1] , b = false , sel = zx , out = zx1 );
        Mux ( a = x[2] , b = false , sel = zx , out = zx2 );
        Mux ( a = x[3] , b = false , sel = zx , out = zx3 );
        Mux ( a = x[4] , b = false , sel = zx , out = zx4 );
        Mux ( a = x[5] , b = false , sel = zx , out = zx5 );
        Mux ( a = x[6] , b = false , sel = zx , out = zx6 );
        Mux ( a = x[7] , b = false , sel = zx , out = zx7 );
        Mux ( a = x[8] , b = false , sel = zx , out = zx8 );
        Mux ( a = x[9] , b = false , sel = zx , out = zx9 );
        Mux ( a = x[10], b = false , sel = zx , out = zx10);
        Mux ( a = x[11], b = false , sel = zx , out = zx11);
        Mux ( a = x[12], b = false , sel = zx , out = zx12);
        Mux ( a = x[13], b = false , sel = zx , out = zx13);
        Mux ( a = x[14], b = false , sel = zx , out = zx14);
        Mux ( a = x[15], b = false , sel = zx , out = zx15);
        Mux ( a = y[0] , b = false , sel = zy , out = zy0 );
        Mux ( a = y[1] , b = false , sel = zy , out = zy1 );
        Mux ( a = y[2] , b = false , sel = zy , out = zy2 );
        Mux ( a = y[3] , b = false , sel = zy , out = zy3 );
        Mux ( a = y[4] , b = false , sel = zy , out = zy4 );
        Mux ( a = y[5] , b = false , sel = zy , out = zy5 );
        Mux ( a = y[6] , b = false , sel = zy , out = zy6 );
        Mux ( a = y[7] , b = false , sel = zy , out = zy7 );
        Mux ( a = y[8] , b = false , sel = zy , out = zy8 );
        Mux ( a = y[9] , b = false , sel = zy , out = zy9 );
        Mux ( a = y[10], b = false , sel = zy , out = zy10);
        Mux ( a = y[11], b = false , sel = zy , out = zy11);
        Mux ( a = y[12], b = false , sel = zy , out = zy12);
        Mux ( a = y[13], b = false , sel = zy , out = zy13);
        Mux ( a = y[14], b = false , sel = zy , out = zy14);
        Mux ( a = y[15], b = false , sel = zy , out = zy15);
        Not ( in = zx0  , out = xn0 );
        Not ( in = zx1  , out = xn1 );
        Not ( in = zx2  , out = xn2 );
        Not ( in = zx3  , out = xn3 );
        Not ( in = zx4  , out = xn4 );
        Not ( in = zx5  , out = xn5 );
        Not ( in = zx6  , out = xn6 );
        Not ( in = zx7  , out = xn7 );
        Not ( in = zx8  , out = xn8 );
        Not ( in = zx9  , out = xn9 );
        Not ( in = zx10 , out = xn10);
        Not ( in = zx11 , out = xn11);
        Not ( in = zx12 , out = xn12);
        Not ( in = zx13 , out = xn13);
        Not ( in = zx14 , out = xn14);
        Not ( in = zx15 , out = xn15);
        Not ( in = zy0  , out = yn0 );
        Not ( in = zy1  , out = yn1 );
        Not ( in = zy2  , out = yn2 );
        Not ( in = zy3  , out = yn3 );
        Not ( in = zy4  , out = yn4 );
        Not ( in = zy5  , out = yn5 );
        Not ( in = zy6  , out = yn6 );
        Not ( in = zy7  , out = yn7 );
        Not ( in = zy8  , out = yn8 );
        Not ( in = zy9  , out = yn9 );
        Not ( in = zy10 , out = yn10);
        Not ( in = zy11 , out = yn11);
        Not ( in = zy12 , out = yn12);
        Not ( in = zy13 , out = yn13);
        Not ( in = zy14 , out = yn14);
        Not ( in = zy15 , out = yn15);
        Mux ( a = zx0 , b = xn0 , sel = nx , out = nx0 );
        Mux ( a = zx1 , b = xn1 , sel = nx , out = nx1 );
        Mux ( a = zx2 , b = xn2 , sel = nx , out = nx2 );
        Mux ( a = zx3 , b = xn3 , sel = nx , out = nx3 );
        Mux ( a = zx4 , b = xn4 , sel = nx , out = nx4 );
        Mux ( a = zx5 , b = xn5 , sel = nx , out = nx5 );
        Mux ( a = zx6 , b = xn6 , sel = nx , out = nx6 );
        Mux ( a = zx7 , b = xn7 , sel = nx , out = nx7 );
        Mux ( a = zx8 , b = xn8 , sel = nx , out = nx8 );
        Mux ( a = zx9 , b = xn9 , sel = nx , out = nx9 );
        Mux ( a = zx10 , b = xn10 , sel = nx , out = nx10 );
        Mux ( a = zx11 , b = xn11 , sel = nx , out = nx11 );
        Mux ( a = zx12 , b = xn12 , sel = nx , out = nx12 );
        Mux ( a = zx13 , b = xn13 , sel = nx , out = nx13 );
        Mux ( a = zx14 , b = xn14 , sel = nx , out = nx14 );
        Mux ( a = zx15 , b = xn15 , sel = nx , out = nx15 );
        Mux ( a = zy0 , b = yn0 , sel = ny , out = ny0 );
        Mux ( a = zy1 , b = yn1 , sel = ny , out = ny1 );
        Mux ( a = zy2 , b = yn2 , sel = ny , out = ny2 );
        Mux ( a = zy3 , b = yn3 , sel = ny , out = ny3 );
        Mux ( a = zy4 , b = yn4 , sel = ny , out = ny4 );
        Mux ( a = zy5 , b = yn5 , sel = ny , out = ny5 );
        Mux ( a = zy6 , b = yn6 , sel = ny , out = ny6 );
        Mux ( a = zy7 , b = yn7 , sel = ny , out = ny7 );
        Mux ( a = zy8 , b = yn8 , sel = ny , out = ny8 );
        Mux ( a = zy9 , b = yn9 , sel = ny , out = ny9 );
        Mux ( a = zy10 , b = yn10 , sel = ny , out = ny10 );
        Mux ( a = zy11 , b = yn11 , sel = ny , out = ny11 );
        Mux ( a = zy12 , b = yn12 , sel = ny , out = ny12 );
        Mux ( a = zy13 , b = yn13 , sel = ny , out = ny13 );
        Mux ( a = zy14 , b = yn14 , sel = ny , out = ny14 );
        Mux ( a = zy15 , b = yn15 , sel = ny , out = ny15 );
        HalfAdder ( a = nx0  , b = ny0  , sum = ad0  , carry = c0 );
        FullAdder ( a = nx1  , b = ny1  , c = c0 , sum = ad1  , carry = c1 );
        FullAdder ( a = nx2  , b = ny2  , c = c1 , sum = ad2  , carry = c2 );
        FullAdder ( a = nx3  , b = ny3  , c = c2 , sum = ad3  , carry = c3 );
        FullAdder ( a = nx4  , b = ny4  , c = c3 , sum = ad4  , carry = c4 );
        FullAdder ( a = nx5  , b = ny5  , c = c4 , sum = ad5  , carry = c5 );
        FullAdder ( a = nx6  , b = ny6  , c = c5 , sum = ad6  , carry = c6 );
        FullAdder ( a = nx7  , b = ny7  , c = c6 , sum = ad7  , carry = c7 );
        FullAdder ( a = nx8  , b = ny8  , c = c7 , sum = ad8  , carry = c8 );
        FullAdder ( a = nx9  , b = ny9  , c = c8 , sum = ad9  , carry = c9 );
        FullAdder ( a = nx10 , b = ny10 , c = c9 , sum = ad10 , carry = c10);
        FullAdder ( a = nx11 , b = ny11 , c = c10, sum = ad11 , carry = c11);
        FullAdder ( a = nx12 , b = ny12 , c = c11, sum = ad12 , carry = c12);
        FullAdder ( a = nx13 , b = ny13 , c = c12, sum = ad13 , carry = c13);
        FullAdder ( a = nx14 , b = ny14 , c = c13, sum = ad14 , carry = c14);
        FullAdder ( a = nx15 , b = ny15 , c = c14, sum = ad15 , carry = ign);
        And ( a = nx0 , b = ny0 , out = an0 );
        And ( a = nx1 , b = ny1 , out = an1 );
        And ( a = nx2 , b = ny2 , out = an2 );
        And ( a = nx3 , b = ny3 , out = an3 );
        And ( a = nx4 , b = ny4 , out = an4 );
        And ( a = nx5 , b = ny5 , out = an5 );
        And ( a = nx6 , b = ny6 , out = an6 );
        And ( a = nx7 , b = ny7 , out = an7 );
        And ( a = nx8 , b = ny8 , out = an8 );
        And ( a = nx9 , b = ny9 , out = an9 );
        And ( a = nx10, b = ny10, out = an10);
        And ( a = nx11, b = ny11, out = an11);
        And ( a = nx12, b = ny12, out = an12);
        And ( a = nx13, b = ny13, out = an13);
        And ( a = nx14, b = ny14, out = an14);
        And ( a = nx15, b = ny15, out = an15);
        Mux ( a = an0 , b = ad0 , sel = f , out = oo0 );
        Mux ( a = an1 , b = ad1 , sel = f , out = oo1 );
        Mux ( a = an2 , b = ad2 , sel = f , out = oo2 );
        Mux ( a = an3 , b = ad3 , sel = f , out = oo3 );
        Mux ( a = an4 , b = ad4 , sel = f , out = oo4 );
        Mux ( a = an5 , b = ad5 , sel = f , out = oo5 );
        Mux ( a = an6 , b = ad6 , sel = f , out = oo6 );
        Mux ( a = an7 , b = ad7 , sel = f , out = oo7 );
        Mux ( a = an8 , b = ad8 , sel = f , out = oo8 );
        Mux ( a = an9 , b = ad9 , sel = f , out = oo9 );
        Mux ( a = an10, b = ad10, sel = f , out = oo10);
        Mux ( a = an11, b = ad11, sel = f , out = oo11);
        Mux ( a = an12, b = ad12, sel = f , out = oo12);
        Mux ( a = an13, b = ad13, sel = f , out = oo13);
        Mux ( a = an14, b = ad14, sel = f , out = oo14);
        Mux ( a = an15, b = ad15, sel = f , out = oo15);
        Not ( in = oo0 , out = no0 );
        Not ( in = oo1 , out = no1 );
        Not ( in = oo2 , out = no2 );
        Not ( in = oo3 , out = no3 );
        Not ( in = oo4 , out = no4 );
        Not ( in = oo5 , out = no5 );
        Not ( in = oo6 , out = no6 );
        Not ( in = oo7 , out = no7 );
        Not ( in = oo8 , out = no8 );
        Not ( in = oo9 , out = no9 );
        Not ( in = oo10, out = no10);
        Not ( in = oo11, out = no11);
        Not ( in = oo12, out = no12);
        Not ( in = oo13, out = no13);
        Not ( in = oo14, out = no14);
        Not ( in = oo15, out = no15);
        Mux ( a = oo0 , b = no0 , sel = no , out = out0  );
        Mux ( a = oo1 , b = no1 , sel = no , out = out1  );
        Mux ( a = oo2 , b = no2 , sel = no , out = out2  );
        Mux ( a = oo3 , b = no3 , sel = no , out = out3  );
        Mux ( a = oo4 , b = no4 , sel = no , out = out4  );
        Mux ( a = oo5 , b = no5 , sel = no , out = out5  );
        Mux ( a = oo6 , b = no6 , sel = no , out = out6  );
        Mux ( a = oo7 , b = no7 , sel = no , out = out7  );
        Mux ( a = oo8 , b = no8 , sel = no , out = out8  );
        Mux ( a = oo9 , b = no9 , sel = no , out = out9  );
        Mux ( a = oo10, b = no10, sel = no , out = out10 );
        Mux ( a = oo11, b = no11, sel = no , out = out11 );
        Mux ( a = oo12, b = no12, sel = no , out = out12 );
        Mux ( a = oo13, b = no13, sel = no , out = out13 );
        Mux ( a = oo14, b = no14, sel = no , out = out14 );
        Mux ( a = oo15, b = no15, sel = no , out = out15 );
        Or  ( a = out0 , b = false , out = out[0]);
        Or  ( a = out1 , b = false , out = out[1]);
        Or  ( a = out2 , b = false , out = out[2]);
        Or  ( a = out3 , b = false , out = out[3]);
        Or  ( a = out4 , b = false , out = out[4]);
        Or  ( a = out5 , b = false , out = out[5]);
        Or  ( a = out6 , b = false , out = out[6]);
        Or  ( a = out7 , b = false , out = out[7]);
        Or  ( a = out8 , b = false , out = out[8]);
        Or  ( a = out9 , b = false , out = out[9]);
        Or  ( a = out10, b = false , out = out[10]);
        Or  ( a = out11, b = false , out = out[11]);
        Or  ( a = out12, b = false , out = out[12]);
        Or  ( a = out13, b = false , out = out[13]);
        Or  ( a = out14, b = false , out = out[14]);
        Or  ( a = out15, b = false , out = out[15]);
        Or  ( a = out0  , b = out1  , out = zr0 );
        Or  ( a = out2  , b = out3  , out = zr1 );
        Or  ( a = out4  , b = out5  , out = zr2 );
        Or  ( a = out6  , b = out7  , out = zr3 );
        Or  ( a = out8  , b = out9  , out = zr4 );
        Or  ( a = out10 , b = out11 , out = zr5 );
        Or  ( a = out12 , b = out13 , out = zr6 );
        Or  ( a = out14 , b = out15 , out = zr7 );
        Or  ( a = zr0 , b = zr1 , out = zr8 );
        Or  ( a = zr2 , b = zr3 , out = zr9 );
        Or  ( a = zr4 , b = zr5 , out = zr10 );
        Or  ( a = zr6 , b = zr7 , out = zr11 );
        Or  ( a = zr8 , b = zr9 , out = zr12 );
        Or  ( a = zr10, b = zr11, out = zr13 );
        Or  ( a = zr12, b = zr13, out = zrs  );
        Not ( in = false , out = tr );
        Mux ( a = tr , b = false , sel = zrs , out = zr );
        Mux ( a = false , b = tr , sel = out15 , out = ng );
}