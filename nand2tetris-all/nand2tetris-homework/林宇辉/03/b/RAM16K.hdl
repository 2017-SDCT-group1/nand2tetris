// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    Or16( a[0..13] = address , a[14..15] = false , b = false , out[0..1] = addr1 , out[2..13] = addr2 );
    DMux4Way ( in = load , sel = addr1 , a = la , b = lb , c= lc , d = ld );
    RAM4K ( in = in , load = la , address = addr2 , out = a );
    RAM4K ( in = in , load = lb , address = addr2 , out = b );
    RAM4K ( in = in , load = lc , address = addr2 , out = c );
    RAM4K ( in = in , load = ld , address = addr2 , out = d );
    Mux4Way16 ( a = a , b = b , c= c , d = d , sel = addr1 , out = out );      }