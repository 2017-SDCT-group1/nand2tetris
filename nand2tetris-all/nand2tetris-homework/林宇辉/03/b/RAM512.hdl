// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    Or16( a[0..8] = address , a[9..15] = false , b = false , out[0..2] = addr1 , out[3..8] = addr2 );
    DMux8Way ( in = load , sel = addr1 , a = la , b = lb , c= lc , d = ld , e = le , f = lf , g = lg , h = lh);
    RAM64 ( in = in , load = la , address = addr2 , out = a );
    RAM64 ( in = in , load = lb , address = addr2 , out = b );
    RAM64 ( in = in , load = lc , address = addr2 , out = c );
    RAM64 ( in = in , load = ld , address = addr2 , out = d );
    RAM64 ( in = in , load = le , address = addr2 , out = e );
    RAM64 ( in = in , load = lf , address = addr2 , out = f );
    RAM64 ( in = in , load = lg , address = addr2 , out = g );
    RAM64 ( in = in , load = lh , address = addr2 , out = h );
    Mux8Way16 ( a = a , b = b , c= c , d = d , e = e , f = f , g = g , h = h , sel = addr1 , out = out );      
}